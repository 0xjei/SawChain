syntax = "proto3";

package sawchain;

message Company {
    // Company unique identifier (First 10 characters of sha512 of adminPublicKey).
    string id = 1;

    // Company name.
    string name = 2;

    // Company description.
    string description = 3;

    // Company website.
    string website = 4;

    // Approximately when transaction was submitted, as a Unix UTC timestamp.
    uint64 timestamp = 5;

    // Company Admin public key.
    string adminPublicKey = 6;

    // List of Company Fields (only for production companies).
    repeated string fields = 7;

    // List of Company Operators.
    repeated string operators = 8;

    // List of Company Batches.
    repeated string batches = 9;

    // todo add filters.
}


message Field {
    // Field identifier.
    string id = 1;

    // Field description.
    string description = 2;

    // Owner Company identifier.
    string company = 3;

    // Cultivated Product Type.
    string product = 4;

    // Predicted production quantity.
    float quantity = 5;

    // Location coordinates.
    Location location = 6;

    // List of recorded Events.
    repeated Event events = 7;
}

message Location {
    // Coordinates are expected to be in millionths of a degree
    sint64 latitude = 1;

    sint64 longitude = 2;
}

message Event {
    // Event Parameter value.
    message EventParameterValue {
        // Event Parameter identifier.
        string parameterTypeId = 1;

        // Values fields. Only one of these fields should be used,
        // and it should match the type specified Type in EventParameterType.
        float floatValue = 2;
        string stringValue = 3;
        bytes bytesValue = 4;
    }

    // Event Type identifier.
    string eventTypeId = 1;

    // Public key of the transaction sender.
    string reporter = 2;

    // Unique identifiers of different EventParameterValues.
    repeated EventParameterValue values = 3;

    // Used transformation quantity.
    float quantity = 4;

    uint64 timestamp = 5;
}

message Batch {
    message Finalization {
        enum Reason {
            WITHDRAWN = 0;
            SOLD = 1;
            EXPIRED = 2;
        }

        Reason reason = 1;

        string reporter = 2;

        string explanation = 3;
    }

    // Change batch ownership proposal.
    message Proposal {
        enum Status {
            ISSUED = 0;
            CANCELED = 1;
            ACCEPTED = 2;
            REJECTED = 3;
        }

        string senderCompany = 1;

        string receiverCompany = 2;

        Status status = 3;

        string notes = 4;

        string motivation = 5;

        uint64 timestamp = 6;
    }

    // A list of value for a PropertyType recorded on Batch.
    message Property {
        // Property Type identifier.
        string propertyTypeId = 1;

        // List of PropertyValue for a PropertyType.
        repeated PropertyValue values = 2;
    }

    // Property Type value.
    message PropertyValue {
        // Values fields. Only one of these fields should be used,
        // and it should match the type specified Type in EventParameterType.
        float floatValue = 2;
        string stringValue = 3;
        bytes bytesValue = 4;
        Location locationValue = 5;

        uint64 timestamp = 6;
    }

    // Certificate issued by a recorded Certification Authority.
    message Certificate {
        // Certification Authority public key.
        string authority = 1;

        // Certificate external link.
        string link = 2;

        // Certificate file hash.
        string hash = 3;

        // Date and time when certificate is issued.
        uint64 timestamp = 4;
    }

    // Batch unique identifier.
    string id = 1;

    // Company unique identifier.
    string company = 2;

    // Product Type identifier.
    string product = 3;

    // Batch quantity.
    float quantity = 4;

    // List of parent fields where Batch is transformed.
    repeated string parentFields = 5;

    // List of parent batches where Batch is transformed.
    repeated string parentBatches = 6;

    // List of recorded Events.
    repeated Event events = 7;

    // Batch certification.
    repeated Certificate certificates = 8;

    // Batch properties.
    repeated Property properties = 9;

    // Batch proposals.
    repeated Proposal proposals = 10;

    Finalization finalization = 11;

    uint64 timestamp = 12;
}